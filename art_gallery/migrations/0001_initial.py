# Generated by Django 4.1 on 2022-12-12 10:25

from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('phone_number', models.CharField(max_length=150, unique=True)),
                ('user_name', models.CharField(max_length=150, unique=True)),
                ('facebook', models.CharField(blank=True, max_length=150, verbose_name='Facebook')),
                ('telegram', models.CharField(blank=True, max_length=150, verbose_name='Telegram')),
                ('instagram', models.CharField(blank=True, max_length=150, verbose_name='Instagram')),
                ('tiktok', models.CharField(blank=True, max_length=150, verbose_name='Tiktok')),
                ('youtube', models.CharField(blank=True, max_length=150, verbose_name='Youtube')),
                ('twitter', models.CharField(blank=True, max_length=150, verbose_name='Twitter')),
                ('linkedin', models.CharField(blank=True, max_length=150, verbose_name='Linkedin')),
                ('email_notification', models.BooleanField(default=True, verbose_name='Email notification')),
                ('gmail_smtp_key', models.CharField(max_length=50, verbose_name='SMTP_KEY')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Art',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='Id')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('image_url', models.CharField(max_length=50, verbose_name='Image')),
                ('tags', models.CharField(blank=True, max_length=50, verbose_name='tags')),
                ('description', models.CharField(max_length=500, verbose_name='description')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Featured')),
                ('discount', models.FloatField(default=0.0, verbose_name='Discount')),
                ('available_copies', models.IntegerField(default=1, verbose_name='Number of copies available')),
                ('sold_amount', models.IntegerField(default=0, verbose_name='Sold amount')),
                ('number_of_views', models.IntegerField(default=0, verbose_name='Number of views')),
            ],
            options={
                'verbose_name': 'Art',
                'verbose_name_plural': 'Arts',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, verbose_name='Email')),
                ('is_subscribed', models.BooleanField(default=False, verbose_name='Subscribed')),
                ('has_contacted', models.BooleanField(default=False, verbose_name='Has contacted')),
                ('has_purchased', models.BooleanField(default=False, verbose_name='Has purchased')),
                ('purchases_completed', models.ManyToManyField(blank=True, related_name='purchased_arts', to='art_gallery.art', verbose_name='')),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=50, verbose_name='Transaction ID')),
                ('is_fulfilled', models.BooleanField(default=False, verbose_name='is_fulfilled')),
                ('date', models.DateField(auto_now=True, verbose_name='Date')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='art_gallery.address', verbose_name='Address')),
                ('art', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='art_gallery.art', verbose_name='')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='art_gallery.client', verbose_name='')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
        migrations.CreateModel(
            name='EmailNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='No subject', max_length=100, verbose_name='Subject')),
                ('recipients', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Account')),
            ],
            options={
                'verbose_name': 'EmailNotification',
                'verbose_name_plural': 'EmailNotification',
            },
        ),
        migrations.CreateModel(
            name='EmailMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(default='No subject', max_length=100, verbose_name='Subject')),
                ('body', models.CharField(max_length=2000, verbose_name='Body')),
                ('attachement', models.FileField(blank=True, upload_to=None, verbose_name='Attachement')),
                ('template', models.CharField(default='general', max_length=50, verbose_name='Template')),
                ('recipients', models.ManyToManyField(to='art_gallery.client', verbose_name='Client')),
            ],
            options={
                'verbose_name': 'EmailMessage',
                'verbose_name_plural': 'EmailMessages',
            },
        ),
        migrations.AddField(
            model_name='art',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='art_gallery.category', verbose_name=''),
        ),
    ]
